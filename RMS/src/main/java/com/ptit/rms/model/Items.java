package com.ptit.rms.model;
// Generated Jul 11, 2017 9:20:47 AM by Hibernate Tools 4.3.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Items generated by hbm2java
 */
@Entity
@Table(name = "items")
public class Items {

  private int itemId;
  private Locations locations;
  private String itemName;
  private boolean type;
  private String description;
  private String unit;
  private Integer min;
  private Integer max;
  private String mapUrl;
  private boolean isDeleted;
  private int itemOrder;
  private Date deletedTime;
  private Date createdAt;
  private Date updatedAt;
  private int createdBy;
  private int updatedBy;
  private Set<HistoryTracking> historyTrackings = new HashSet<HistoryTracking>(0);
  private Set<ItemData> itemDatas = new HashSet<ItemData>(0);

  public Items() {
  }

  public Items(int itemId, Locations locations, String itemName, boolean type, boolean isDeleted, Date createdAt, Date updatedAt, int createdBy,
      int updatedBy) {
    this.itemId = itemId;
    this.locations = locations;
    this.itemName = itemName;
    this.type = type;
    this.isDeleted = isDeleted;
    this.createdAt = createdAt;
    this.updatedAt = updatedAt;
    this.createdBy = createdBy;
    this.updatedBy = updatedBy;
  }

  public Items(int itemId, Locations locations, String itemName, boolean type, String description, String unit, Integer min, Integer max,
      String mapUrl, boolean isDeleted, Date deletedTime, Date createdAt, Date updatedAt, int createdBy, int updatedBy,
      Set<HistoryTracking> historyTrackings, Set<ItemData> itemDatas) {
    this.itemId = itemId;
    this.locations = locations;
    this.itemName = itemName;
    this.type = type;
    this.description = description;
    this.unit = unit;
    this.min = min;
    this.max = max;
    this.mapUrl = mapUrl;
    this.isDeleted = isDeleted;
    this.deletedTime = deletedTime;
    this.createdAt = createdAt;
    this.updatedAt = updatedAt;
    this.createdBy = createdBy;
    this.updatedBy = updatedBy;
    this.historyTrackings = historyTrackings;
    this.itemDatas = itemDatas;
  }

  @Id

  @Column(name = "item_id", unique = true, nullable = false)
  public int getItemId() {
    return this.itemId;
  }

  public void setItemId(int itemId) {
    this.itemId = itemId;
  }

  @ManyToOne(fetch = FetchType.LAZY)
  @JoinColumn(name = "location_id", nullable = false)
  public Locations getLocations() {
    return this.locations;
  }

  public void setLocations(Locations locations) {
    this.locations = locations;
  }

  @Column(name = "item_name", nullable = false)
  public String getItemName() {
    return this.itemName;
  }

  public void setItemName(String itemName) {
    this.itemName = itemName;
  }

  @Column(name = "type", nullable = false)
  public boolean getType() {
    return this.type;
  }

  public void setType(boolean type) {
    this.type = type;
  }

  @Column(name = "description")
  public String getDescription() {
    return this.description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  @Column(name = "unit")
  public String getUnit() {
    return this.unit;
  }

  public void setUnit(String unit) {
    this.unit = unit;
  }

  @Column(name = "min")
  public Integer getMin() {
    return this.min;
  }

  public void setMin(Integer min) {
    this.min = min;
  }

  @Column(name = "max")
  public Integer getMax() {
    return this.max;
  }

  public void setMax(Integer max) {
    this.max = max;
  }

  @Column(name = "map_url")
  public String getMapUrl() {
    return this.mapUrl;
  }

  public void setMapUrl(String mapUrl) {
    this.mapUrl = mapUrl;
  }

  @Column(name = "is_deleted", nullable = false)
  public boolean getIsDeleted() {
    return this.isDeleted;
  }

  public void setIsDeleted(boolean isDeleted) {
    this.isDeleted = isDeleted;
  }

  @Column(name = "item_order", nullable = false)
  public int getItemOrder() {
    return itemOrder;
  }

  public void setItemOrder(int itemOrder) {
    this.itemOrder = itemOrder;
  }

  @Temporal(TemporalType.TIMESTAMP)
  @Column(name = "deleted_time", length = 23)
  public Date getDeletedTime() {
    return this.deletedTime;
  }

  public void setDeletedTime(Date deletedTime) {
    this.deletedTime = deletedTime;
  }

  @Temporal(TemporalType.TIMESTAMP)
  @Column(name = "created_at", nullable = false, length = 23)
  public Date getCreatedAt() {
    return this.createdAt;
  }

  public void setCreatedAt(Date createdAt) {
    this.createdAt = createdAt;
  }

  @Temporal(TemporalType.TIMESTAMP)
  @Column(name = "updated_at", nullable = false, length = 23)
  public Date getUpdatedAt() {
    return this.updatedAt;
  }

  public void setUpdatedAt(Date updatedAt) {
    this.updatedAt = updatedAt;
  }

  @Column(name = "created_by", nullable = false)
  public int getCreatedBy() {
    return this.createdBy;
  }

  public void setCreatedBy(int createdBy) {
    this.createdBy = createdBy;
  }

  @Column(name = "updated_by", nullable = false)
  public int getUpdatedBy() {
    return this.updatedBy;
  }

  public void setUpdatedBy(int updatedBy) {
    this.updatedBy = updatedBy;
  }

  @OneToMany(fetch = FetchType.LAZY, mappedBy = "items")
  public Set<HistoryTracking> getHistoryTrackings() {
    return this.historyTrackings;
  }

  public void setHistoryTrackings(Set<HistoryTracking> historyTrackings) {
    this.historyTrackings = historyTrackings;
  }

  @OneToMany(fetch = FetchType.LAZY, mappedBy = "items")
  public Set<ItemData> getItemDatas() {
    return this.itemDatas;
  }

  public void setItemDatas(Set<ItemData> itemDatas) {
    this.itemDatas = itemDatas;
  }

}
